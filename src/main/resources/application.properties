# Database Connection
database.url = jdbc:oracle:thin:@r1q-v-1320.ehealthsask.ca:1523:EHRR1QA
database.username = HIAL
database.password = today123



# ===============================
# = OTHER DEV STUFF
# ===============================
spring.thymeleaf.cache=false

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Let Spring autodetect the different SQL Dialects of each datasource
spring.jpa.database=default

# HIAL and TR R1D
#spring.datasource.url = jdbc:mysql://localhost:3306/employees
spring.datasource.driver-class-name = oracle.jdbc.OracleDriver
spring.datasource.url = jdbc:oracle:thin:@r1d-v-1320.ehealthsask.ca:1521:EHRR1D
spring.datasource.username = HIAL
spring.datasource.password = today123

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1


#spring.datasource.driverClassName=com.mysql.jdbc.Driver
server.port=8080

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = none

# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect